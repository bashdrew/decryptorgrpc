// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pbdecryptor.proto

/*
Package pbdecryptor is a generated protocol buffer package.

It is generated from these files:
	pbdecryptor.proto

It has these top-level messages:
	DecryptRequest
	DecryptResponse
*/
package pbdecryptor

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DecryptRequest struct {
	Id      int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	EncText string `protobuf:"bytes,2,opt,name=encText" json:"encText,omitempty"`
}

func (m *DecryptRequest) Reset()                    { *m = DecryptRequest{} }
func (m *DecryptRequest) String() string            { return proto.CompactTextString(m) }
func (*DecryptRequest) ProtoMessage()               {}
func (*DecryptRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DecryptRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DecryptRequest) GetEncText() string {
	if m != nil {
		return m.EncText
	}
	return ""
}

type DecryptResponse struct {
	Id        int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	PlnText   string `protobuf:"bytes,2,opt,name=plnText" json:"plnText,omitempty"`
	CipherKey string `protobuf:"bytes,3,opt,name=cipherKey" json:"cipherKey,omitempty"`
}

func (m *DecryptResponse) Reset()                    { *m = DecryptResponse{} }
func (m *DecryptResponse) String() string            { return proto.CompactTextString(m) }
func (*DecryptResponse) ProtoMessage()               {}
func (*DecryptResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DecryptResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DecryptResponse) GetPlnText() string {
	if m != nil {
		return m.PlnText
	}
	return ""
}

func (m *DecryptResponse) GetCipherKey() string {
	if m != nil {
		return m.CipherKey
	}
	return ""
}

func init() {
	proto.RegisterType((*DecryptRequest)(nil), "pbdecryptor.DecryptRequest")
	proto.RegisterType((*DecryptResponse)(nil), "pbdecryptor.DecryptResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PBDecryptor service

type PBDecryptorClient interface {
	Decrypt(ctx context.Context, in *DecryptRequest, opts ...grpc.CallOption) (*DecryptResponse, error)
}

type pBDecryptorClient struct {
	cc *grpc.ClientConn
}

func NewPBDecryptorClient(cc *grpc.ClientConn) PBDecryptorClient {
	return &pBDecryptorClient{cc}
}

func (c *pBDecryptorClient) Decrypt(ctx context.Context, in *DecryptRequest, opts ...grpc.CallOption) (*DecryptResponse, error) {
	out := new(DecryptResponse)
	err := grpc.Invoke(ctx, "/pbdecryptor.PBDecryptor/Decrypt", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PBDecryptor service

type PBDecryptorServer interface {
	Decrypt(context.Context, *DecryptRequest) (*DecryptResponse, error)
}

func RegisterPBDecryptorServer(s *grpc.Server, srv PBDecryptorServer) {
	s.RegisterService(&_PBDecryptor_serviceDesc, srv)
}

func _PBDecryptor_Decrypt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecryptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PBDecryptorServer).Decrypt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbdecryptor.PBDecryptor/Decrypt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PBDecryptorServer).Decrypt(ctx, req.(*DecryptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PBDecryptor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pbdecryptor.PBDecryptor",
	HandlerType: (*PBDecryptorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Decrypt",
			Handler:    _PBDecryptor_Decrypt_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pbdecryptor.proto",
}

func init() { proto.RegisterFile("pbdecryptor.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x48, 0x4a, 0x49,
	0x4d, 0x2e, 0xaa, 0x2c, 0x28, 0xc9, 0x2f, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x46,
	0x12, 0x52, 0xb2, 0xe2, 0xe2, 0x73, 0x81, 0x70, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84,
	0xf8, 0xb8, 0x98, 0x32, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x98, 0x83, 0x98, 0x32, 0x53, 0x84,
	0x24, 0xb8, 0xd8, 0x53, 0xf3, 0x92, 0x43, 0x52, 0x2b, 0x4a, 0x24, 0x98, 0x14, 0x18, 0x35, 0x38,
	0x83, 0x60, 0x5c, 0xa5, 0x48, 0x2e, 0x7e, 0xb8, 0xde, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x6c,
	0x9a, 0x0b, 0x72, 0xf2, 0x90, 0x35, 0x43, 0xb9, 0x42, 0x32, 0x5c, 0x9c, 0xc9, 0x99, 0x05, 0x19,
	0xa9, 0x45, 0xde, 0xa9, 0x95, 0x12, 0xcc, 0x60, 0x39, 0x84, 0x80, 0x51, 0x28, 0x17, 0x77, 0x80,
	0x93, 0x0b, 0xcc, 0x95, 0x42, 0x6e, 0x5c, 0xec, 0x50, 0x8e, 0x90, 0xb4, 0x1e, 0xb2, 0x8f, 0x50,
	0xdd, 0x2e, 0x25, 0x83, 0x5d, 0x12, 0xe2, 0x38, 0x25, 0x06, 0x27, 0x4d, 0x2e, 0xe1, 0xcc, 0x7c,
	0xbd, 0xf4, 0xa2, 0x82, 0x64, 0x64, 0x85, 0x4e, 0x02, 0x48, 0x76, 0x05, 0x80, 0xc2, 0x28, 0x80,
	0x31, 0x89, 0x0d, 0x1c, 0x58, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe6, 0xab, 0x55, 0xb1,
	0x41, 0x01, 0x00, 0x00,
}
